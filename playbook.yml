---
- name: Provisioning HA k8s cluster
  hosts: all
  vars:
    keepalived_interface: ens3
    keepalived_virtual_router_id: 177
    keepalived_virtual_ipaddress: 10.231.238.221/24  ## 172.17.0.55/24
    # keepalived_conf: |
    #   global_defs {
    #       router_id LVS_DEVEL
    #   }
    #   vrrp_script {{ keepalived_script_name }} {
    #     script {{ keepalived_script_path }}
    #     interval 3
    #     weight -2
    #     fall 10
    #     rise 2
    #   }

    #   vrrp_instance VI_1 {
    #       state {{ keepalived_role }}
    #       interface {{ keepalived_interface }}
    #       virtual_router_id {{ keepalived_virtual_router_id | default("eth0") }}
    #       priority {{ keepalived_priority }}
    #       authentication {
    #           auth_type PASS
    #           auth_pass {{ keepalived_pass }}
    #       }
    #       virtual_ipaddress {
    #         {{ keepalived_virtual_ipaddress }}
    #       }
    #       track_script {
    #           {{ keepalived_script_name }}
    #       }
    #   }

    haproxy_backend_server_endpoint_list:
      - {"hostname": "pjb-dev-k8s-m1", "ip": 10.231.238.242, "port": 6443}
      - {"hostname": "pjb-dev-k8s-m2", "ip": 10.231.238.243, "port": 6443}
      - {"hostname": "pjb-dev-k8s-m3", "ip": 10.231.238.244, "port": 6443}

    # haproxy_conf: |
    #   #---------------------------------------------------------------------
    #   # apiserver frontend which proxys to the masters
    #   #---------------------------------------------------------------------
    #   frontend apiserver
    #       bind *:{{ haproxy_frontend_port }}
    #       mode tcp
    #       option tcplog
    #       default_backend apiserver

    #   #---------------------------------------------------------------------
    #   # round robin balancing for apiserver
    #   #---------------------------------------------------------------------
    #   backend apiserver
    #       option httpchk GET /livez
    #       http-check expect status 200
    #       mode tcp
    #       option ssl-hello-chk
    #       balance     roundrobin
    #           {% for node in haproxy_backend_server_endpoint_list %}
    #           server {{ node.hostname }} {{ node.ip }}:{{ node.port }} check
    #           {% endfor %}

    kubernetes_controlplane_endpoint: 10.231.238.221:8443 
    kubelet_extra_args: "--fail-swap-on=false --cgroup-driver=cgroupfs"
    kubeadm_init_configuration:
      localAPIEndpoint:
        advertiseAddress: "{{ ansible_default_ipv4.address }}"
        bindPort: 6443 # "{{ kubernetes_apiserver_adcertise_bindport | default(6443) | int }}"  # this jinja delimiter has problem about parsing string not int
      ### use when it comes to a molecule docker driver
      nodeRegistration:
        ignorePreflightErrors:
          - Swap
          - SystemVerification
        taints: [] # null is 'node-role.kubernetes.io/master=""' and [] is not to taint your control-plane node

    kubeadm_cluster_configuration:
      networking:
        podSubnet: "{{ kubernetes_pod_network.cidr }}"
      kubernetesVersion: "{{ kubeadm_kubernetes_version }}"
      controlPlaneEndpoint: "{{ kubernetes_controlplane_endpoint | default(kubeadm_init_configuration.localAPIEndpoint.advertiseAddress + ':' + kubeadm_init_configuration.localAPIEndpoint.bindPort|string) }}"


    kubeadm_kubelet_configuration: # {}
      ### use when it comes to molecule docker driver because configuraring cgroup-driver is complicate in docker container
      cgroupDriver: "cgroupfs" 

    kubeadm_kubeproxy_configuration: # {}
      ### use when it comes to molecule docker driver because configuraring /lib/modules is complicate in docker container
      conntrack:
        maxPerCore: 0

    kubeadm_join_configuration:
      # caCertPath: "default(/etc/kubernetes/pki/ca.crt"
      discovery:
        bootstrapToken:
          apiServerEndpoint: "{{ hostvars[groups['k8s-master'][0]]['ansible_default_ipv4']['address'] }}:6443"
          token: "{{ kubeadm_token | default('') }}"
          caCertHashes:
            - "{{ kubeadm_hash | default('') }}"
          # unsafeSkipCAVerification: true
        tlsBootstrapToken: "{{ kubeadm_token | default('') }}"
      nodeRegistration:
        # name: # default is hostname
        # criSocket: /var/run/dockershim.sock
        
        ## use when it comes to a molecule docker driver
        ignorePreflightErrors:
          - Swap
          - SystemVerification
          - IsDockerSystemdCheck
        taints: [] # null is 'node-role.kubernetes.io/master=""' and [] is not to taint your control-plane node

    kubeadm_join_configuration_controlplane:
      controlPlane:
        localAPIEndpoint:
          advertiseAddress: "{{ ansible_default_ipv4.address }}"
          bindPort: 6443
        certificateKey: "{{ kubeadm_cert_key | default('') }}"
  become: true
  roles:
    # - role: jb.ansible_docker
    - role: jb.ansible_keepalived
    - role: jb.ansible_haproxy
    - role: jb.ansible_kubeadm